---
######################################### Cross ########################################
- name: Configure kudeadm
  shell: kubeadm config images pull

- name: Install CNI (Container Network Interface)
  shell: kubeadm init --pod-network-cidr 10.0.0.0/24
    
- name: Generate join token
  shell: |
    kubeadm token create --print-join-command
  register: kubeadm_join_cmd
  
- name: copy the output to a local file
  copy:
    content: "{{ kubeadm_join_cmd.stdout }}"
    dest: "roles/node/files/kubeadm_join_cmd.txt"
  delegate_to: localhost

- name: Authorize root
  shell: |
    mkdir -p /root/.kube
    cp -i /etc/kubernetes/admin.conf /root/.kube/config
    chown $(id -u):$(id -g) /root/.kube/config

#- name: Install SDN (Calico)
#  shell: |
#    kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
#    wget https://docs.projectcalico.org/manifests/custom-resources.yaml
#    sed -i '/cidr: 192.168.0.0\/16/c\      cidr: 10.0.0.0\/24' custom-resources.yaml
#    kubectl apply -f custom-resources.yaml

#- name: Install SDN en Azure (Calico)
#  shell: |
#    wget https://docs.projectcalico.org/manifests/canal.yaml
#    sed -i '/CALICO_IPV4POOL_CIDR/c\            - name: CALICO_IPV4POOL_CIDR' canal.yaml
#    sed -i '/192.168.0.0\/16/c\              value: "10.0.0.0\/24"' canal.yaml
#    kubectl apply -f canal.yaml

- name: Install SDN en Azure (Wave)
  shell: |
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

- name: Copy metalLB.yaml
  copy:
    src: "{{ item }}"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644    
  become: yes  
  with_items:
      - "metalLB.yaml"

- name: Install MetalLB
  shell: |
    kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e 's/strictARP: false/strictARP: true/' | sed -e 's/mode: ""/mode: "ipvs"/' | sudo kubectl diff -f - -n kube-system
    kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e 's/strictARP: false/strictARP: true/' | sed -e 's/mode: ""/mode: "ipvs"/' | sudo kubectl apply -f - -n kube-system
    kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml
    kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml
    kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
    kubectl apply -f metalLB.yaml

- name: Deploy Ingress Controller
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/haproxytech/kubernetes-ingress/v1.5/deploy/haproxy-ingress.yaml

- name: Create Kubeadmin user
  user:
    name: kubeadmin
    createhome: yes
    home: /home/kubeadmin
    password: "{{ 'P@ssword1234' | password_hash('sha512') }}"

- name: Configure Kubeadmin user
  shell: |
    mkdir -p /home/kubeadmin/.kube
    cp -i /etc/kubernetes/admin.conf /home/kubeadmin/.kube/config
    chown kubeadmin. /home/kubeadmin/.kube/config
    cat <<EOF > /etc/sudoers.d/kubeadmin
    ALL            ALL = (ALL) NOPASSWD: ALL
    EOF